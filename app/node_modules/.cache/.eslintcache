[{"C:\\Test_Challenkers\\app\\src\\index.js":"1","C:\\Test_Challenkers\\app\\src\\app.js":"2","C:\\Test_Challenkers\\app\\src\\components\\citations\\mesCitations.tsx":"3","C:\\Test_Challenkers\\app\\src\\components\\citations\\btnsCitations.js":"4","C:\\Test_Challenkers\\app\\src\\components\\citations\\createSearch.js":"5","C:\\Test_Challenkers\\app\\src\\components\\popups\\create.js":"6","C:\\Test_Challenkers\\app\\src\\components\\popups\\delete.js":"7","C:\\Test_Challenkers\\app\\src\\components\\popups\\edit.js":"8","C:\\Test_Challenkers\\app\\src\\components\\citations\\displayCitations.js":"9","C:\\Test_Challenkers\\app\\src\\components\\citations\\favoriteCitation.tsx":"10"},{"size":207,"mtime":1689674087850,"results":"11","hashOfConfig":"12"},{"size":698,"mtime":1690024421818,"results":"13","hashOfConfig":"12"},{"size":6417,"mtime":1690112803771,"results":"14","hashOfConfig":"12"},{"size":2842,"mtime":1690030775178,"results":"15","hashOfConfig":"12"},{"size":2465,"mtime":1690112716876,"results":"16","hashOfConfig":"12"},{"size":4525,"mtime":1690020590254,"results":"17","hashOfConfig":"12"},{"size":1418,"mtime":1690020591978,"results":"18","hashOfConfig":"12"},{"size":5504,"mtime":1690020604404,"results":"19","hashOfConfig":"12"},{"size":10866,"mtime":1690064605161,"results":"20","hashOfConfig":"12"},{"size":1621,"mtime":1690037305849,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"bbeo6d",{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Test_Challenkers\\app\\src\\index.js",[],[],[],"C:\\Test_Challenkers\\app\\src\\app.js",["56"],[],"C:\\Test_Challenkers\\app\\src\\components\\citations\\mesCitations.tsx",["57"],[],"import React, { useState, useEffect,useReducer} from \"react\";\r\nimport \"../css/favorite.css\";\r\nimport Edit from \"../popups/edit\";\r\nimport Delete from \"../popups/delete\";\r\nimport axios from 'axios';\r\n\r\n  \r\nfunction MesCitations( {searchTerm ,reducerValuee} ) {\r\n  const [reducerValue, forceUpdate] = useReducer((x) => x + 1, 0);\r\n  const [citations, setCitations] = useState([]);\r\n  const [signalEdit, setSignalEdit] = useState(false);\r\n  const [resSearch, setResSearch] = useState([]); \r\n\r\n\r\n \r\nuseEffect(() => {\r\n  getAllCitation();\r\n}, [reducerValue, reducerValuee]);\r\n\r\n\r\n  const getAllCitation = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:3000/fetchallCitations');\r\n      const { data, status } = response;\r\n      if (status === 200) {\r\n        setCitations(data);\r\n     \r\n      } else {\r\n        throw new Error('Erreur lors de la récupération des citations.');\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const [showDeletePopup, setShowDeletePopup] = useState(false);\r\n  const [showEditPopup, setShowEditPopup] = useState(false);\r\n  const [idCitation, setIdCitation] = useState('');\r\n\r\n\r\n  const editButton = (id) => {\r\n    setShowEditPopup(true);\r\n    setIdCitation(id);\r\n    setSignalEdit(true);\r\n\r\n\r\n\r\n  };\r\n\r\n  const deleteButton = (id) => {\r\n    setShowDeletePopup(true);\r\n    setIdCitation(id);\r\n\r\n\r\n  };\r\n\r\n  const closeEditPopup = () => {\r\n    setShowEditPopup(false);\r\n\r\n  };\r\n\r\n  const closeDeletePopup = () => {\r\n    setShowDeletePopup(false);\r\n  };\r\n/* Search function*/\r\nuseEffect(() => {\r\n  // Set up an interval to call the method every 1 second\r\n  \r\n handleSearch();\r\n\r\n}, [searchTerm,reducerValue]);\r\n\r\nconst handleSearch = async () => {\r\n  try {\r\n    const response = await axios.get(\"http://localhost:3000/rechercher\", {\r\n      params: {\r\n        searchTerm: searchTerm, // Passez la valeur de 'searchTerm' en tant que paramètre de requête\r\n      },\r\n    });\r\n\r\n    if (response.data.length > 0) {\r\n      // Des citations ont été trouvées\r\n      setResSearch(response.data);\r\n    } else {\r\n      // Aucune citation trouvée\r\n      console.log(\"Aucune citation trouvée pour le terme de recherche\");\r\n      setResSearch(response.data)\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Une erreur est survenue lors de la recherche des citations :\", error);\r\n  }\r\n};\r\n\r\n\r\n\r\n/* ----------------*/\r\n \r\n\r\n  return (\r\n    <div>\r\n      <div className=\"container_mescitation\">\r\n        <div className=\"line1\"></div>\r\n\r\n        {resSearch.length > 0 ? (\r\n          resSearch.map((c: { id: number; citation: string }) => (\r\n            <div key={c.id} className=\"fetchallCitations\">\r\n              <div className=\"myquote\">\r\n                <p>{c.citation}</p>\r\n\r\n                <div className=\"btns_del_edit\">\r\n                <svg\r\n                  key={c.id}\r\n                  onClick={() => deleteButton(c.id)}\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  width=\"15\"\r\n                  height=\"15\"\r\n                  viewBox=\"0 0 32 32\"\r\n                >\r\n                  <path\r\n                    fill=\"none\"\r\n                    stroke=\"black\"\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                    strokeWidth=\"2\"\r\n                    d=\"M28 6H6l2 24h16l2-24H4m12 6v12m5-12l-1 12m-9-12l1 12m0-18l1-4h6l1 4\"\r\n                  />\r\n                </svg>\r\n                <svg\r\n                  onClick={() => editButton(c.id)}\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  width=\"15\"\r\n                  height=\"15\"\r\n                  viewBox=\"0 0 32 32\"\r\n                >\r\n                  <path\r\n                    fill=\"none\"\r\n                    stroke=\"black\"\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                    strokeWidth=\"2\"\r\n                    d=\"m30 7l-5-5L5 22l-2 7l7-2Zm-9-1l5 5ZM5 22l5 5Z\"\r\n                  />\r\n                </svg>\r\n              </div>\r\n              </div>\r\n              <div className=\"line2\"></div>\r\n            </div>\r\n          ))\r\n        ) : resSearch.length === 0 ? (\r\n          <p className=\"emptysearchquote\">La citations que vous cherchez n'existe pas</p>\r\n        ) : citations.length > 0 ? (\r\n          citations.map((c: { id: number; citation: string }) => (\r\n            <div key={c.id} className=\"fetchallCitations\">\r\n              <div className=\"myquote\">\r\n                <p>{c.citation}</p>\r\n\r\n                <div className=\"btns_del_edit\">\r\n                <svg\r\n                  key={c.id}\r\n                  onClick={() => deleteButton(c.id)}\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  width=\"15\"\r\n                  height=\"15\"\r\n                  viewBox=\"0 0 32 32\"\r\n                >\r\n                  <path\r\n                    fill=\"none\"\r\n                    stroke=\"black\"\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                    strokeWidth=\"2\"\r\n                    d=\"M28 6H6l2 24h16l2-24H4m12 6v12m5-12l-1 12m-9-12l1 12m0-18l1-4h6l1 4\"\r\n                  />\r\n                </svg>\r\n                <svg\r\n                  onClick={() => editButton(c.id)}\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  width=\"15\"\r\n                  height=\"15\"\r\n                  viewBox=\"0 0 32 32\"\r\n                >\r\n                  <path\r\n                    fill=\"none\"\r\n                    stroke=\"black\"\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                    strokeWidth=\"2\"\r\n                    d=\"m30 7l-5-5L5 22l-2 7l7-2Zm-9-1l5 5ZM5 22l5 5Z\"\r\n                  />\r\n                </svg>\r\n              </div>\r\n              </div>\r\n              <div className=\"line2\"></div>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <p className=\"emptyquote\">Aucune citation disponible</p>\r\n        )}\r\n      </div>\r\n\r\n      <Edit forceUpdate={forceUpdate}  detectSignalEdit={signalEdit} resetSignal={() => setSignalEdit(false)} showEditPopup={showEditPopup} idCitation={idCitation} closeEditPopup={closeEditPopup} />\r\n      <Delete   forceUpdate={forceUpdate}  showDeletePopup={showDeletePopup} idCitation={idCitation} closeDeletePopup={closeDeletePopup} />\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default MesCitations;\r\n","C:\\Test_Challenkers\\app\\src\\components\\citations\\btnsCitations.js",[],[],"C:\\Test_Challenkers\\app\\src\\components\\citations\\createSearch.js",["58"],[],"import React, { useState,useReducer, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"../css/createSearch.css\";\r\nimport Create from \"../popups/create\";\r\nimport MesCitations from \"./mesCitations.tsx\";\r\n\r\nfunction CreateSearch() {\r\n  const [showCreatePopup, setShowCreatePopup] = useState(false);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [reducerValuee, forceUpdate] = useReducer((x) => x + 1, 0);\r\n \r\n  const closeCreatePopup = () => {\r\n    setShowCreatePopup(false);\r\n  };\r\n\r\n  useEffect(()=>{\r\n\r\n  },[reducerValuee]);\r\n\r\n  const createButton = () => {\r\n    setShowCreatePopup(true);\r\n  };\r\n\r\n\r\n\r\n  \r\n\r\n  return (\r\n    <div>\r\n    <div className=\"container_mes_citations\">\r\n      <div className=\"title_mes_citations\">\r\n        <h2>Mes citations</h2>\r\n      </div>\r\n\r\n      <div className=\"create_search\">\r\n        <div className=\"btn_create\">\r\n          <button>\r\n            <div className=\"create\" onClick={createButton}>\r\n              \r\n              <svg\r\n              \r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                width=\"15\"\r\n                height=\"15\"\r\n                viewBox=\"0 0 512 512\"\r\n              >\r\n                <path\r\n                  fill=\"white\"\r\n                  d=\"M298.7 213.3V0h-85.4v213.3H0v85.4h213.3V512h85.4V298.7H512v-85.4z\"\r\n                />\r\n              </svg>\r\n              ajouter une citation\r\n            </div>\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"search_bar\">\r\n          <input\r\n          \r\n          onChange={(e) => setSearchTerm(e.target.value)} // Mettre à jour l'état 'searchTerm' lorsqu'il y a des changements dans l'input\r\n            type=\"text\"\r\n            placeholder=\"Rechercher dans mes citations\"\r\n          ></input>\r\n          <svg\r\n          className=\"search_icon\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            width=\"18\"\r\n            height=\"18\"\r\n            viewBox=\"0 0 15 15\"\r\n          >\r\n            <path\r\n              fill=\"none\"\r\n              stroke=\"#6303ac\"\r\n              d=\"m14.5 14.5l-4-4m-4 2a6 6 0 1 1 0-12a6 6 0 0 1 0 12Z\"\r\n            />\r\n          </svg>\r\n        </div>\r\n      </div>\r\n      <Create   forceUpdate={forceUpdate} showCreatePopup={showCreatePopup} closeCreatePopup={closeCreatePopup} />\r\n    \r\n\r\n\r\n\r\n\r\n\r\n    </div>\r\n    <MesCitations searchTerm={searchTerm} reducerValuee={reducerValuee} />\r\n\r\n\r\n\r\n    </div>\r\n\r\n    \r\n  );\r\n\r\n\r\n}\r\nexport default CreateSearch;\r\n",[],"C:\\Test_Challenkers\\app\\src\\components\\popups\\create.js",["59","60"],[],"C:\\Test_Challenkers\\app\\src\\components\\popups\\delete.js",["61"],[],"C:\\Test_Challenkers\\app\\src\\components\\popups\\edit.js",["62","63","64"],[],"C:\\Test_Challenkers\\app\\src\\components\\citations\\displayCitations.js",["65","66","67"],[],"C:\\Test_Challenkers\\app\\src\\components\\citations\\favoriteCitation.tsx",[],[],{"ruleId":"68","severity":1,"message":"69","line":6,"column":26,"nodeType":"70","messageId":"71","endLine":6,"endColumn":31},{"ruleId":"72","severity":1,"message":"73","line":71,"column":4,"nodeType":"74","endLine":71,"endColumn":29,"suggestions":"75"},{"ruleId":"68","severity":1,"message":"76","line":2,"column":8,"nodeType":"70","messageId":"71","endLine":2,"endColumn":13},{"ruleId":"77","severity":1,"message":"78","line":136,"column":15,"nodeType":"79","endLine":136,"endColumn":77},{"ruleId":"77","severity":1,"message":"78","line":141,"column":15,"nodeType":"79","endLine":141,"endColumn":71},{"ruleId":"68","severity":1,"message":"80","line":1,"column":17,"nodeType":"70","messageId":"71","endLine":1,"endColumn":25},{"ruleId":"72","severity":1,"message":"81","line":22,"column":6,"nodeType":"74","endLine":22,"endColumn":24,"suggestions":"82"},{"ruleId":"77","severity":1,"message":"78","line":178,"column":15,"nodeType":"79","endLine":178,"endColumn":63},{"ruleId":"77","severity":1,"message":"78","line":183,"column":15,"nodeType":"79","endLine":183,"endColumn":69},{"ruleId":"72","severity":1,"message":"83","line":25,"column":6,"nodeType":"74","endLine":25,"endColumn":30,"suggestions":"84"},{"ruleId":"72","severity":1,"message":"85","line":32,"column":6,"nodeType":"74","endLine":32,"endColumn":37,"suggestions":"86"},{"ruleId":"77","severity":1,"message":"78","line":272,"column":15,"nodeType":"79","endLine":272,"endColumn":78},"no-unused-vars","'toast' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleSearch'. Either include it or remove the dependency array.","ArrayExpression",["87"],"'axios' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'getCitationDetails' and 'resetSignal'. Either include them or remove the dependency array. If 'resetSignal' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["88"],"React Hook useEffect has a missing dependency: 'resetSignal'. Either include it or remove the dependency array. If 'resetSignal' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["89"],"React Hook useEffect has missing dependencies: 'getRandomKaamelottCitation' and 'resetKaamelottSignal'. Either include them or remove the dependency array. If 'resetKaamelottSignal' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["90"],{"desc":"91","fix":"92"},{"desc":"93","fix":"94"},{"desc":"95","fix":"96"},{"desc":"97","fix":"98"},"Update the dependencies array to be: [searchTerm, reducerValue, handleSearch]",{"range":"99","text":"100"},"Update the dependencies array to be: [detectSignalEdit, getCitationDetails, resetSignal]",{"range":"101","text":"102"},"Update the dependencies array to be: [detectSignalMyCitation, resetSignal]",{"range":"103","text":"104"},"Update the dependencies array to be: [detectSignalKaamelottCitation, getRandomKaamelottCitation, resetKaamelottSignal]",{"range":"105","text":"106"},[1665,1690],"[searchTerm, reducerValue, handleSearch]",[676,694],"[detectSignalEdit, getCitationDetails, resetSignal]",[769,793],"[detectSignalMyCitation, resetSignal]",[942,973],"[detectSignalKaamelottCitation, getRandomKaamelottCitation, resetKaamelottSignal]"]