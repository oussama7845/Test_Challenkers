{"ast":null,"code":"import axios from \"axios\";\nconst createAxiosInstance = axios.create({\n  baseURL: process.env.REACT_APP_API_URI\n});\nconst get = (route, options = {}) => {\n  const authHeader = store.getState().auth ? {\n    Authorization: store.getState().auth.token\n  } : {};\n  const headers = {\n    ...authHeader,\n    ...options.headers\n  };\n  return createAxiosInstance.get(route, {\n    headers,\n    ...options\n  });\n};\nconst post = (route, body = {}, isUpload = false) => {\n  const authHeader = store.getState().auth ? {\n    Authorization: store.getState().auth.token\n  } : {};\n  let headers = {\n    ...authHeader\n  };\n  if (isUpload) {\n    headers = {\n      ...headers,\n      \"Content-Type\": \"multipart/form-data\"\n    };\n  }\n  return createAxiosInstance.post(route, body, {\n    headers\n  });\n};\nconst patch = (route, body = {}) => {\n  const authHeader = store.getState().auth ? {\n    Authorization: store.getState().auth.token\n  } : {};\n  const headers = {\n    ...authHeader\n  };\n  return createAxiosInstance.patch(route, body, {\n    headers\n  });\n};\nconst put = (route, body = {}) => {\n  const authHeader = store.getState().auth ? {\n    Authorization: store.getState().auth.token\n  } : {};\n  const headers = {\n    ...authHeader\n  };\n  return createAxiosInstance.put(route, body, {\n    headers\n  });\n};\nconst del = route => {\n  const authHeader = store.getState().auth ? {\n    Authorization: store.getState().auth.token\n  } : {};\n  const headers = {\n    ...authHeader\n  };\n  return createAxiosInstance.delete(route, {\n    headers\n  });\n};\nexport { get, post, patch, put, del };","map":{"version":3,"names":["axios","createAxiosInstance","create","baseURL","process","env","REACT_APP_API_URI","get","route","options","authHeader","store","getState","auth","Authorization","token","headers","post","body","isUpload","patch","put","del","delete"],"sources":["C:/Test_Challenkers/app/src/services/api.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst createAxiosInstance = axios.create({\r\n  baseURL: process.env.REACT_APP_API_URI,\r\n});\r\n\r\nconst get = (route, options = {}) => {\r\n  const authHeader = store.getState().auth\r\n    ? { Authorization: store.getState().auth.token }\r\n    : {};\r\n  const headers = { ...authHeader, ...options.headers };\r\n\r\n  return createAxiosInstance.get(route, { headers, ...options });\r\n};\r\n\r\nconst post = (route, body = {}, isUpload = false) => {\r\n  const authHeader = store.getState().auth\r\n    ? { Authorization: store.getState().auth.token }\r\n    : {};\r\n  let headers = { ...authHeader };\r\n\r\n  if (isUpload) {\r\n    headers = {\r\n      ...headers,\r\n      \"Content-Type\": \"multipart/form-data\",\r\n    };\r\n  }\r\n\r\n  return createAxiosInstance.post(route, body, { headers });\r\n};\r\n\r\nconst patch = (route, body = {}) => {\r\n  const authHeader = store.getState().auth\r\n    ? { Authorization: store.getState().auth.token }\r\n    : {};\r\n  const headers = { ...authHeader };\r\n\r\n  return createAxiosInstance.patch(route, body, { headers });\r\n};\r\n\r\nconst put = (route, body = {}) => {\r\n  const authHeader = store.getState().auth\r\n    ? { Authorization: store.getState().auth.token }\r\n    : {};\r\n  const headers = { ...authHeader };\r\n\r\n  return createAxiosInstance.put(route, body, { headers });\r\n};\r\n\r\nconst del = (route) => {\r\n  const authHeader = store.getState().auth\r\n    ? { Authorization: store.getState().auth.token }\r\n    : {};\r\n  const headers = { ...authHeader };\r\n\r\n  return createAxiosInstance.delete(route, { headers });\r\n};\r\n\r\nexport { get, post, patch, put, del };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}