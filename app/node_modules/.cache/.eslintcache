[{"C:\\Test_Challenkers\\app\\src\\index.js":"1","C:\\Test_Challenkers\\app\\src\\app.js":"2","C:\\Test_Challenkers\\app\\src\\components\\citations\\displayCitations.tsx":"3","C:\\Test_Challenkers\\app\\src\\components\\citations\\createSearch.tsx":"4","C:\\Test_Challenkers\\app\\src\\components\\citations\\btnsCitations.tsx":"5","C:\\Test_Challenkers\\app\\src\\components\\citations\\mesCitations.tsx":"6","C:\\Test_Challenkers\\app\\src\\components\\popups\\edit.jsx":"7","C:\\Test_Challenkers\\app\\src\\components\\popups\\create.jsx":"8","C:\\Test_Challenkers\\app\\src\\components\\popups\\delete.jsx":"9"},{"size":207,"mtime":1689674087850,"results":"10","hashOfConfig":"11"},{"size":642,"mtime":1689796216419,"results":"12","hashOfConfig":"11"},{"size":7332,"mtime":1689849502149,"results":"13","hashOfConfig":"11"},{"size":1896,"mtime":1689781623468,"results":"14","hashOfConfig":"11"},{"size":2844,"mtime":1689841301686,"results":"15","hashOfConfig":"11"},{"size":3316,"mtime":1689808433153,"results":"16","hashOfConfig":"11"},{"size":5505,"mtime":1689840708709,"results":"17","hashOfConfig":"11"},{"size":4519,"mtime":1689776172171,"results":"18","hashOfConfig":"11"},{"size":1413,"mtime":1689774219116,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"bbeo6d",{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"23"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"23"},"C:\\Test_Challenkers\\app\\src\\index.js",[],[],[],"C:\\Test_Challenkers\\app\\src\\app.js",["52"],[],"C:\\Test_Challenkers\\app\\src\\components\\citations\\displayCitations.tsx",["53","54","55"],[],"import React, { useEffect, useState } from 'react';\r\nimport '../css/displayCitations.css';\r\nimport axios from 'axios';\r\n\r\n\r\nfunction DisplayCitations( {detectSignalKaamelottCitation,resetKaamelottSignal, detectSignalMyCitation, resetSignal }) {\r\n  const [citation, setcitation] = useState('');\r\n  const [personnage, setpersonnage] = useState('');\r\n  const [episode, setepisode] = useState('');\r\n  const [checkEmptyRandom, setcheckEmptyRandom] = useState(10);\r\n\r\n  useEffect(() => {\r\n    if (detectSignalMyCitation) {\r\n      getRandomCitation();\r\n      resetSignal();\r\n    }\r\n  }, [detectSignalMyCitation]);\r\n\r\n  useEffect(() => {\r\n    if (detectSignalKaamelottCitation) {\r\n      getRandomKaamelottCitation();\r\n      resetKaamelottSignal();\r\n    }\r\n  }, [detectSignalKaamelottCitation]);\r\n\r\n\r\n  \r\n// we can't call the kaamelott api from the front because both server are not in the same domaine (error :: cros) \r\n//solution ? call the kaamelott from the backend and then call the /api/random in th front :)\r\n\r\n  const getRandomKaamelottCitation = async () => {\r\n\r\n  const apiUrl = \"http://localhost:3000/api/random\"; \r\n\r\naxios.get(apiUrl)\r\n  .then(response => {\r\n\r\n    setcitation(response.data.citation.citation) \r\n    setpersonnage(response.data.citation.infos.personnage);\r\n    setepisode(response.data.citation.infos.episode) ;\r\n    setcheckEmptyRandom(0);\r\n\r\n    \r\n  })\r\n  .catch(error => {\r\n    console.log(\"Erreur lors de l'appel à l'API via votre serveur backend.\", error);\r\n  });\r\n\r\n  };\r\n  \r\n  \r\n\r\n  const getRandomCitation = async () => {\r\n    try {\r\n\r\n      const response = await axios.get('http://localhost:3000/fetchRandomCitation');\r\n\r\n      const { data, status } = response;\r\n      if (status === 200) {\r\n        setcheckEmptyRandom(0);\r\n\r\n        const { citation, personnage, episode } = data;\r\n        setcitation(citation);\r\n        setpersonnage(personnage);\r\n        setepisode(episode);\r\n      } else if(status === 201){\r\n        setcheckEmptyRandom(1);\r\n\r\n        console.log(checkEmptyRandom)\r\n      } else{\r\n        throw new Error('Erreur lors de la récupération de la citation aléatoire.');\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\nreturn (\r\n  <div className='container_citations'>\r\n    <div className='title'>\r\n      <h1>Citations</h1>\r\n    </div>\r\n    <div className='container_border'>\r\n      {checkEmptyRandom === 1 ?(\r\n        <div className='mesCitationsDefault'>\r\n           <p>Aucune citation disponible. Veuillez en créer une </p>\r\n\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"22\" height=\"22\" viewBox=\"0 0 48 48\"><path fill=\"#ffe500\" d=\"M5.04 24.46a18.96 18.96 0 1 0 37.92 0a18.96 18.96 0 1 0-37.92 0Z\"/><path fill=\"#ebcb00\" d=\"M24 5.5a19 19 0 1 0 19 19a19 19 0 0 0-19-19Zm0 35.07a17.3 17.3 0 1 1 17.3-17.3A17.3 17.3 0 0 1 24 40.57Z\"/><path fill=\"#fff48c\" d=\"M18.31 9.29a5.69 1.42 0 1 0 11.38 0a5.69 1.42 0 1 0-11.38 0Z\"/><path fill=\"#45413c\" d=\"M8.83 45.5a15.17 1.5 0 1 0 30.34 0a15.17 1.5 0 1 0-30.34 0Z\" opacity=\".15\"/><path fill=\"none\" stroke=\"#45413c\" stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M5.04 24.46a18.96 18.96 0 1 0 37.92 0a18.96 18.96 0 1 0-37.92 0Z\"/><path fill=\"#fff\" stroke=\"#45413c\" stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M18.79 23a3.32 3.32 0 1 1-3.32-3.32A3.32 3.32 0 0 1 18.79 23Z\"/><path fill=\"#ffaa54\" d=\"M37.74 29.2c0 .78-1.06 1.42-2.37 1.42S33 30 33 29.2s1.07-1.42 2.37-1.42s2.37.63 2.37 1.42Zm-27.48 0c0 .78 1.06 1.42 2.37 1.42S15 30 15 29.2s-1.07-1.42-2.37-1.42s-2.37.63-2.37 1.42Z\"/><path fill=\"none\" stroke=\"#45413c\" stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M28.27.5v17.06m4.26-15.38v15.64M36.8 5.03v14.69\"/><path fill=\"#fff\" stroke=\"#45413c\" stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M35.85 23a3.32 3.32 0 1 1-3.32-3.32A3.32 3.32 0 0 1 35.85 23Z\"/><path fill=\"#ffb0ca\" stroke=\"#45413c\" stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M24 36.6a14.27 14.27 0 0 1 5.77 1.22c1.94.87 4.18.31 4.66-2.26c.66-3.56-4.27-8.73-10.43-8.73S12.91 32 13.57 35.56c.48 2.57 2.72 3.13 4.66 2.26A14.27 14.27 0 0 1 24 36.6Z\"/><path fill=\"#ff87af\" stroke=\"#45413c\" stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M24 36.6a14.27 14.27 0 0 1 5.77 1.22a3.37 3.37 0 0 0 3.56-.26a11.81 11.81 0 0 0-18.66 0a3.37 3.37 0 0 0 3.56.26A14.27 14.27 0 0 1 24 36.6Z\"/></svg>\r\n\r\n        </div>\r\n      ) : checkEmptyRandom === 10 ? (\r\n        <div className='mesCitationsDefault'>\r\n          <p>Explorez les citations en cliquant ci-dessous</p>\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"22\" height=\"22\" viewBox=\"0 0 48 48\"><path fill=\"#ffe500\" d=\"M4 21.5a20 20 0 1 0 40 0a20 20 0 1 0-40 0Z\"/><path fill=\"#ebcb00\" d=\"M24 1.5a20 20 0 1 0 20 20a20 20 0 0 0-20-20Zm0 37a18.25 18.25 0 1 1 18.25-18.25A18.25 18.25 0 0 1 24 38.5Z\"/><path fill=\"#fff48c\" d=\"M18 5.5a6 1.5 0 1 0 12 0a6 1.5 0 1 0-12 0Z\"/><path fill=\"#45413c\" d=\"M8 45.5a16 1.5 0 1 0 32 0a16 1.5 0 1 0-32 0Z\" opacity=\".15\"/><path fill=\"none\" stroke=\"#45413c\" stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M4 21.5a20 20 0 1 0 40 0a20 20 0 1 0-40 0Z\"/><path fill=\"#ffaa54\" d=\"M38.5 26.5c0 .83-1.12 1.5-2.5 1.5s-2.5-.67-2.5-1.5S34.62 25 36 25s2.5.67 2.5 1.5Zm-29 0c0 .83 1.12 1.5 2.5 1.5s2.5-.67 2.5-1.5S13.38 25 12 25s-2.5.67-2.5 1.5Z\"/><path fill=\"#ffe500\" d=\"M15.63 42.78a7.59 7.59 0 0 0 10.73 0l6.13-6.13A1.75 1.75 0 0 0 30 34.18l2.12-2.12a1.75 1.75 0 1 0-2.47-2.48l.71-.71a1.75 1.75 0 1 0-2.48-2.47l-1.41 1.41A1.75 1.75 0 1 0 24 25.34l-5.83 5.83l-.45-3.67a1.63 1.63 0 0 0-3 .25l-1.48 4.45a10.16 10.16 0 0 0 2.39 10.58Z\"/><path fill=\"#ebcb00\" d=\"m32.18 33.93l-5.82 5.81a7.57 7.57 0 0 1-10.73 0a10.18 10.18 0 0 1-2.86-5.66a10.14 10.14 0 0 0 2.86 8.7a7.59 7.59 0 0 0 10.73 0l6.13-6.13a1.75 1.75 0 0 0 0-2.47a1.79 1.79 0 0 0-.31-.25Z\"/><path fill=\"none\" stroke=\"#45413c\" stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"m26.65 27.64l-4.24 4.24m7.43-2.48l-4.95 4.95m5.3-.35l-2.83 2.83M32.5 19.5s.17-2 2-2s2 2 2 2m-25 0s.17-2 2-2s2 2 2 2m.13 23.28a7.59 7.59 0 0 0 10.73 0l6.13-6.13A1.75 1.75 0 0 0 30 34.18l2.12-2.12a1.75 1.75 0 1 0-2.47-2.48l.71-.71a1.75 1.75 0 1 0-2.48-2.47l-1.41 1.41A1.75 1.75 0 1 0 24 25.34l-5.83 5.83l-.45-3.67a1.63 1.63 0 0 0-3 .25l-1.48 4.45a10.16 10.16 0 0 0 2.39 10.58Z\"/></svg>\r\n        </div>\r\n        \r\n      ) : (\r\n        <>\r\n          <div className='quote'>\r\n            <h3> {citation} </h3>\r\n          </div>\r\n          <div className='arthur'>\r\n            <p>{personnage} - '{episode}'</p>\r\n          </div>\r\n          <div className='container_favorite_btn'>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"17\" height=\"17\" viewBox=\"0 0 24 24\">\r\n              <path fill=\"#6303ac\" d=\"M12 .25a.75.75 0 0 1 .673.418l3.058 6.197l6.839.994a.75.75 0 0 1 .415 1.279l-4.948 4.823l1.168 6.811a.751.751 0 0 1-1.088.791L12 18.347l-6.117 3.216a.75.75 0 0 1-1.088-.79l1.168-6.812l-4.948-4.823a.75.75 0 0 1 .416-1.28l6.838-.993L11.328.668A.75.75 0 0 1 12 .25Zm0 2.445L9.44 7.882a.75.75 0 0 1-.565.41l-5.725.832l4.143 4.038a.748.748 0 0 1 .215.664l-.978 5.702l5.121-2.692a.75.75 0 0 1 .698 0l5.12 2.692l-.977-5.702a.748.748 0 0 1 .215-.664l4.143-4.038l-5.725-.831a.75.75 0 0 1-.565-.41L12 2.694Z\"/>\r\n            </svg>\r\n            <a href=\"#\" className='star_btn'>Mettre en favoris</a>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  </div>\r\n);\r\n\r\n  \r\n  \r\n}\r\n\r\nexport default DisplayCitations;\r\n","C:\\Test_Challenkers\\app\\src\\components\\citations\\createSearch.tsx",[],[],[],"C:\\Test_Challenkers\\app\\src\\components\\citations\\btnsCitations.tsx",[],[],"C:\\Test_Challenkers\\app\\src\\components\\citations\\mesCitations.tsx",[],[],"C:\\Test_Challenkers\\app\\src\\components\\popups\\edit.jsx",["56","57","58"],[],"C:\\Test_Challenkers\\app\\src\\components\\popups\\create.jsx",["59","60"],[],"import React, { useState } from \"react\";\r\nimport \"../css/edit.css\";\r\nimport axios from \"axios\";\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction Create({ showCreatePopup, closeCreatePopup }) {\r\n  const [citation, setcitation] = useState(\"\");\r\n  const [auteur, setauteur] = useState(\"\");\r\n  const [acteur, setacteur] = useState(\"\");\r\n  const [personnage, setpersonnage] = useState(\"\");\r\n  const [saison, setsaison] = useState(\"\");\r\n  const [episode, setepisode] = useState(\"\");\r\n\r\n  const confirmCreateCitation = async () => {\r\n    try {\r\n      let body = {\r\n        citation: citation,\r\n        auteur: auteur,\r\n        acteur: acteur,\r\n        personnage: personnage,\r\n        saison: saison,\r\n        episode: episode,\r\n      };\r\n\r\n      const response = await axios.post(\"http://localhost:3000/create_Citation\",body);\r\n\r\n      if (response.status === 201) {\r\n         closeCreatePopup(); // appeler la function qui close le pop up\r\n         window.location.reload();\r\n        toast.success(\"Citation enregistré avec succès\");\r\n\r\n        \r\n      } else {\r\n        toast.error(\"error\");\r\n\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n      toast.error(\"error\");\r\n    }\r\n  };\r\n\r\n\r\n  return showCreatePopup ? (\r\n\r\n    \r\n<div id=\"app\">\r\n      <div className='popup'>\r\n        <div className=\"profile-popup-content\">\r\n          <div className=\"title-profile\">\r\n            <h2>Créer votre Citation</h2>\r\n            <div className=\"line3\"></div>\r\n          </div>\r\n          <div className=\"colonne-step\">\r\n            <div className=\"colonnne-step1-grid1\">\r\n              <div className=\"input-field\">\r\n                <label >Citation</label>\r\n                <input\r\n                  id=\"citation\"\r\n                  value={citation}\r\n                  onChange={(e) => setcitation(e.target.value)}\r\n                  type=\"text\"\r\n                  placeholder=\"Créer votre citation\"\r\n                />\r\n              </div>\r\n              <div className=\"input-field\">\r\n                <label >auteur</label>\r\n                <input\r\n                  id=\"auteur\"\r\n                  value={auteur}\r\n                  onChange={(e) => setauteur(e.target.value)}\r\n                  type=\"text\"\r\n                  placeholder=\"Nom de l'auteur\"\r\n                />\r\n              </div>\r\n\r\n              <div className=\"input-field\">\r\n                <label >episode</label>\r\n                <input\r\n                  id=\"episode\"\r\n                  value={episode}\r\n                  onChange={(e) => setepisode(e.target.value)}\r\n                  type=\"text\"\r\n                  placeholder=\"quelle épisode ?\"\r\n                />\r\n              </div>\r\n\r\n   \r\n            </div>\r\n            <div className=\"colonnne-step1-grid2\">\r\n              <div className=\"input-field\">\r\n                <label >acteur</label>\r\n                <input\r\n                  id=\"acteur\"\r\n                  value={acteur}\r\n                  onChange={(e) => setacteur(e.target.value)}\r\n                  type=\"text\"\r\n                  placeholder=\"Nom de l'acteur\"\r\n                />\r\n              </div>\r\n              <div className=\"input-field\">\r\n                <label >\r\n                personnage\r\n                 \r\n                </label>\r\n                <input\r\n                  value={personnage}\r\n                  onChange={(e) => setpersonnage(e.target.value)}\r\n                  id=\"personnage\"\r\n                  type=\"text\"\r\n                  placeholder=\"Nom de personnage\"\r\n                />\r\n              </div>\r\n\r\n              <div className=\"input-field\">\r\n                <label >saison</label>\r\n                <input\r\n                  id=\"saison\"\r\n                  value={saison}\r\n                  onChange={(e) => setsaison(e.target.value)}\r\n                  type=\"text\"\r\n                  placeholder=\"quelle saison ?\"\r\n                />\r\n              </div>\r\n\r\n     \r\n\r\n              \r\n\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"button-colonne margin\">\r\n            <div className=\"container_btn_invite\">\r\n              <a onClick={confirmCreateCitation}  href=\"#\" className=\"btn1\">\r\n                Confirmer\r\n              </a>\r\n            </div>\r\n            <div className=\"container_btn_invite\">\r\n              <a onClick={closeCreatePopup} href=\"#\" className=\"btn1\">\r\n                Cancel\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  \r\n  ) : null;\r\n}\r\n\r\nexport default Create;\r\n\r\n\r\n","C:\\Test_Challenkers\\app\\src\\components\\popups\\delete.jsx",["61"],[],"import React, { useState } from \"react\";\r\nimport \"../css/delete.css\";\r\nimport axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\n\r\n\r\n\r\nfunction Delete({ showDeletePopup, idCitation , closeDeletePopup }) {\r\n\r\n\r\n  const confirm = async () => {\r\n    try {\r\n      const response = await axios.delete(`http://localhost:3000/citation/${idCitation}`);\r\n      \r\n      if (response.status === 200) {\r\n        closeDeletePopup();\r\n        window.location.reload();\r\n        toast.success('Citations supprimer avec succès');\r\n\r\n        \r\n     \r\n      } else {\r\n        throw new Error('Erreur lors de la récupération des citations.');\r\n      }\r\n    }\r\n      \r\n     catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n  \r\n    \r\n  return showDeletePopup ? (\r\n\r\n\r\n<div className=\"popup\">\r\n\r\n<div className=\"popup_container\">\r\n        <div className=\"title_confirm_delete\">\r\n          <h3>Vous êtes sûr ?</h3>\r\n        </div>\r\n        <br />\r\n        <div  className=\"btns-colonne\">\r\n          <button onClick={confirm}\r\n            className=\"container_btn_confirm\"\r\n            \r\n          >\r\n            Confirmer\r\n          </button>\r\n          <button\r\n            className=\"container_btn_close\"\r\n            onClick={closeDeletePopup}\r\n          >\r\n            Annuler\r\n          </button>\r\n        </div>\r\n \r\n\r\n</div>\r\n      \r\n\r\n</div>\r\n    \r\n      \r\n\r\n  \r\n  ) : null;\r\n}\r\n\r\nexport default Delete;\r\n\r\n",{"ruleId":"62","severity":1,"message":"63","line":6,"column":26,"nodeType":"64","messageId":"65","endLine":6,"endColumn":31},{"ruleId":"66","severity":1,"message":"67","line":17,"column":6,"nodeType":"68","endLine":17,"endColumn":30,"suggestions":"69"},{"ruleId":"66","severity":1,"message":"70","line":24,"column":6,"nodeType":"68","endLine":24,"endColumn":37,"suggestions":"71"},{"ruleId":"72","severity":1,"message":"73","line":109,"column":13,"nodeType":"74","endLine":109,"endColumn":46},{"ruleId":"66","severity":1,"message":"75","line":22,"column":6,"nodeType":"68","endLine":22,"endColumn":24,"suggestions":"76"},{"ruleId":"72","severity":1,"message":"73","line":178,"column":15,"nodeType":"74","endLine":178,"endColumn":63},{"ruleId":"72","severity":1,"message":"73","line":183,"column":15,"nodeType":"74","endLine":183,"endColumn":69},{"ruleId":"72","severity":1,"message":"73","line":135,"column":15,"nodeType":"74","endLine":135,"endColumn":77},{"ruleId":"72","severity":1,"message":"73","line":140,"column":15,"nodeType":"74","endLine":140,"endColumn":71},{"ruleId":"62","severity":1,"message":"77","line":1,"column":17,"nodeType":"64","messageId":"65","endLine":1,"endColumn":25},"no-unused-vars","'toast' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getRandomCitation' and 'resetSignal'. Either include them or remove the dependency array. If 'resetSignal' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["78"],"React Hook useEffect has a missing dependency: 'resetKaamelottSignal'. Either include it or remove the dependency array. If 'resetKaamelottSignal' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["79"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has missing dependencies: 'getCitationDetails' and 'resetSignal'. Either include them or remove the dependency array. If 'resetSignal' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["80"],"'useState' is defined but never used.",{"desc":"81","fix":"82"},{"desc":"83","fix":"84"},{"desc":"85","fix":"86"},"Update the dependencies array to be: [detectSignalMyCitation, getRandomCitation, resetSignal]",{"range":"87","text":"88"},"Update the dependencies array to be: [detectSignalKaamelottCitation, resetKaamelottSignal]",{"range":"89","text":"90"},"Update the dependencies array to be: [detectSignalEdit, getCitationDetails, resetSignal]",{"range":"91","text":"92"},[580,604],"[detectSignalMyCitation, getRandomCitation, resetSignal]",[753,784],"[detectSignalKaamelottCitation, resetKaamelottSignal]",[663,681],"[detectSignalEdit, getCitationDetails, resetSignal]"]