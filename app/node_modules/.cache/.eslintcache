[{"C:\\Test_Challenkers\\app\\src\\index.js":"1","C:\\Test_Challenkers\\app\\src\\app.js":"2","C:\\Test_Challenkers\\app\\src\\components\\citations\\displayCitations.tsx":"3","C:\\Test_Challenkers\\app\\src\\components\\citations\\createSearch.tsx":"4","C:\\Test_Challenkers\\app\\src\\components\\citations\\btnsCitations.tsx":"5","C:\\Test_Challenkers\\app\\src\\components\\citations\\mesCitations.tsx":"6","C:\\Test_Challenkers\\app\\src\\components\\popups\\edit.jsx":"7","C:\\Test_Challenkers\\app\\src\\components\\popups\\create.jsx":"8","C:\\Test_Challenkers\\app\\src\\components\\popups\\delete.jsx":"9"},{"size":207,"mtime":1689674087850,"results":"10","hashOfConfig":"11"},{"size":744,"mtime":1689757787335,"results":"12","hashOfConfig":"11"},{"size":2080,"mtime":1689760680117,"results":"13","hashOfConfig":"11"},{"size":1900,"mtime":1689723525097,"results":"14","hashOfConfig":"11"},{"size":2064,"mtime":1689684390128,"results":"15","hashOfConfig":"11"},{"size":3319,"mtime":1689777456660,"results":"16","hashOfConfig":"11"},{"size":5433,"mtime":1689778006631,"results":"17","hashOfConfig":"11"},{"size":4519,"mtime":1689776172171,"results":"18","hashOfConfig":"11"},{"size":1413,"mtime":1689774219116,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"bbeo6d",{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Test_Challenkers\\app\\src\\index.js",[],[],[],"C:\\Test_Challenkers\\app\\src\\app.js",["50"],[],"C:\\Test_Challenkers\\app\\src\\components\\citations\\displayCitations.tsx",["51"],[],"C:\\Test_Challenkers\\app\\src\\components\\citations\\createSearch.tsx",[],[],[],"C:\\Test_Challenkers\\app\\src\\components\\citations\\btnsCitations.tsx",[],[],"C:\\Test_Challenkers\\app\\src\\components\\citations\\mesCitations.tsx",[],[],"C:\\Test_Challenkers\\app\\src\\components\\popups\\edit.jsx",["52","53","54"],[],"import React, { useState, useEffect } from \"react\";\r\nimport \"../css/edit.css\";\r\nimport { toast } from 'react-toastify';\r\nimport axios from 'axios';\r\n\r\n \r\nfunction Edit({ showEditPopup, idCitation, showDetailsEditPopup, closeEditPopup }) {\r\n  const [citations, setCitations] = useState([]);\r\n\r\n    const [citation, setcitation] = useState('');\r\n    const [auteur, setauteur] = useState('');\r\n    const [acteur, setacteur] = useState('');\r\n    const [personnage, setpersonnage] = useState('');\r\n    const [saison, setsaison] = useState('');\r\n    const [episode, setepisode] = useState('');\r\n\r\n\r\n  useEffect(() => {\r\n    if (showDetailsEditPopup) {\r\n      getCitationDetails();\r\n    }\r\n  }, [showDetailsEditPopup]);\r\n\r\n\r\n    const getCitationDetails = async () => {\r\n      console.log(\"1\")\r\n    \r\n    try {\r\n      const response = await axios.get(`http://localhost:3000/fetchCitationById/${idCitation}`);\r\n      console.log(response)\r\n      \r\n      const { data, status } = response;\r\n      if (status === 200) {\r\n        setCitations(data);\r\n     \r\n      } else {\r\n        throw new Error('Erreur lors de la récupération des citations.');\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n    \r\n\r\n\r\n    const confirm = async () => {\r\n      try {\r\n        let body = {\r\n          citation: citation,\r\n          auteur: auteur,\r\n          acteur: acteur,\r\n          personnage: personnage,\r\n          saison: saison,\r\n          episode: episode,\r\n        };\r\n  \r\n        const response = await axios.put(`http://localhost:3000/edit_Citation/${idCitation}`,body);\r\n  \r\n        if (response.status === 200) {\r\n          closeEditPopup(); // appeler la function qui close le pop up\r\n           window.location.reload();\r\n          toast.success(\"modification est faite avec succès\");\r\n  \r\n          \r\n        } else {\r\n          toast.error(\"error\");\r\n  \r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n        toast.error(\"error\");\r\n      }\r\n    };\r\n\r\n\r\n\r\n  return showEditPopup ? (\r\n\r\n    \r\n<div id=\"app\">\r\n      <div className='popup'>\r\n        <div className=\"profile-popup-content\">\r\n          <div className=\"title-profile\">\r\n            <h2>Modifier votre Citation</h2>\r\n            <div className=\"line3\"></div>\r\n          </div>\r\n          <div className=\"colonne-step\">\r\n            <div className=\"colonnne-step1-grid1\">\r\n              <div className=\"input-field\">\r\n                <label >Citation</label>\r\n                <input\r\n                  id=\"citation\"\r\n                  defaultValue={citations.citation}\r\n                  onChange={(e) => setcitation(e.target.value)}\r\n                  type=\"text\"\r\n                  placeholder=\"modifier votre citation\"\r\n                />\r\n              </div>\r\n              <div className=\"input-field\">\r\n                <label >auteur</label>\r\n                <input\r\n                  id=\"auteur\"\r\n                  defaultValue={citations.auteur}\r\n                  onChange={(e) => setauteur(e.target.value)}\r\n                  type=\"text\"\r\n                  placeholder=\"modifier le nom de l'auteur\"\r\n                />\r\n              </div>\r\n\r\n              <div className=\"input-field\">\r\n                <label >episode</label>\r\n                <input\r\n                  id=\"episode\"\r\n                  defaultValue={citations.episode}\r\n                  onChange={(e) => setepisode(e.target.value)}\r\n                  type=\"text\"\r\n                  placeholder=\"quelle épisode ?\"\r\n                />\r\n              </div>\r\n\r\n   \r\n            </div>\r\n            <div className=\"colonnne-step1-grid2\">\r\n              <div className=\"input-field\">\r\n                <label >acteur</label>\r\n                <input\r\n                  id=\"acteur\"\r\n                  defaultValue={citations.acteur}\r\n                  onChange={(e) => setacteur(e.target.value)}\r\n                  type=\"text\"\r\n                  placeholder=\"modifier le nom de l'auteur\"\r\n                />\r\n              </div>\r\n              <div className=\"input-field\">\r\n                <label >\r\n                personnage\r\n                 \r\n                </label>\r\n                <input\r\n                  defaultValue={citations.personnage}\r\n                  onChange={(e) => setpersonnage(e.target.value)}\r\n                  id=\"personnage\"\r\n                  type=\"text\"\r\n                  placeholder=\"modifier le nom de personnage\"\r\n                />\r\n              </div>\r\n\r\n              <div className=\"input-field\">\r\n                <label >saison</label>\r\n                <input\r\n                  id=\"saison\"\r\n                  defaultValue={citations.saison}\r\n                  onChange={(e) => setsaison(e.target.value)}\r\n                  type=\"text\"\r\n                  placeholder=\"quelle saison ?\"\r\n                />\r\n              </div>\r\n\r\n     \r\n\r\n              \r\n\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"button-colonne margin\">\r\n            <div className=\"container_btn_invite\">\r\n              <a  href=\"#\" className=\"btn1\" onClick={confirm}>\r\n                Confirmer\r\n              </a>\r\n            </div>\r\n            <div className=\"container_btn_invite\">\r\n              <a onClick={closeEditPopup} href=\"#\" className=\"btn1\">\r\n                Cancel\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  \r\n  ) : null;\r\n}\r\n\r\nexport default Edit;\r\n\r\n\r\n","C:\\Test_Challenkers\\app\\src\\components\\popups\\create.jsx",["55","56"],[],"C:\\Test_Challenkers\\app\\src\\components\\popups\\delete.jsx",["57"],[],{"ruleId":"58","severity":1,"message":"59","line":7,"column":26,"nodeType":"60","messageId":"61","endLine":7,"endColumn":31},{"ruleId":"62","severity":1,"message":"63","line":48,"column":9,"nodeType":"64","endLine":48,"endColumn":42},{"ruleId":"65","severity":1,"message":"66","line":22,"column":6,"nodeType":"67","endLine":22,"endColumn":28,"suggestions":"68"},{"ruleId":"62","severity":1,"message":"63","line":169,"column":15,"nodeType":"64","endLine":169,"endColumn":63},{"ruleId":"62","severity":1,"message":"63","line":174,"column":15,"nodeType":"64","endLine":174,"endColumn":69},{"ruleId":"62","severity":1,"message":"63","line":135,"column":15,"nodeType":"64","endLine":135,"endColumn":77},{"ruleId":"62","severity":1,"message":"63","line":140,"column":15,"nodeType":"64","endLine":140,"endColumn":71},{"ruleId":"58","severity":1,"message":"69","line":1,"column":17,"nodeType":"60","messageId":"61","endLine":1,"endColumn":25},"no-unused-vars","'toast' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getCitationDetails'. Either include it or remove the dependency array.","ArrayExpression",["70"],"'useState' is defined but never used.",{"desc":"71","fix":"72"},"Update the dependencies array to be: [getCitationDetails, showDetailsEditPopup]",{"range":"73","text":"74"},[688,710],"[getCitationDetails, showDetailsEditPopup]"]