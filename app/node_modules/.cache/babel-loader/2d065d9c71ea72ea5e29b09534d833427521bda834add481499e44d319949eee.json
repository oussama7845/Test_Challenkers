{"ast":null,"code":"import axios from \"axios\";\nexport default (({\n  store\n}, inject) => {\n  inject(\"get\", (route, options = {}) => {\n    let headers = {\n      headers: {\n        Authorization: store.state.auth ? store.state.auth.token : \"\"\n      },\n      ...options\n    };\n    return new Promise((resolve, reject) => {\n      axios.get(process.env.api_uri + route, headers).then(function (response) {\n        resolve(response);\n      }).catch(err => {\n        reject(err);\n      });\n    });\n  });\n  inject(\"post\", (route, body = {}, isUpload = false) => {\n    let headers = !isUpload ? {\n      headers: {\n        Authorization: store.state.auth ? store.state.auth.token : \"\"\n      }\n    } : {\n      headers: {\n        Authorization: store.state.auth ? store.state.auth.token : \"\",\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    };\n    return new Promise((resolve, reject) => {\n      axios.post(process.env.api_uri + route, body, headers).then(function (response) {\n        resolve(response);\n      }).catch(err => {\n        reject(err);\n      });\n    });\n  });\n  inject(\"patch\", (route, body = {}) => {\n    let headers = {\n      headers: {\n        Authorization: store.state.auth ? store.state.auth.token : \"\"\n      }\n    };\n    return new Promise((resolve, reject) => {\n      axios.patch(process.env.api_uri + route, body, headers).then(function (response) {\n        resolve(response);\n      }).catch(err => {\n        reject(err);\n      });\n    });\n  });\n  inject(\"put\", (route, body = {}) => {\n    let headers = {\n      headers: {\n        Authorization: store.state.auth ? store.state.auth.token : \"\"\n      }\n    };\n    return new Promise((resolve, reject) => {\n      axios.put(process.env.api_uri + route, body, headers).then(function (response) {\n        resolve(response);\n      }).catch(err => {\n        reject(err);\n      });\n    });\n  });\n  inject(\"del\", route => {\n    let headers = {\n      headers: {\n        Authorization: store.state.auth ? store.state.auth.token : \"\"\n      }\n    };\n    return new Promise((resolve, reject) => {\n      axios.delete(process.env.api_uri + route, headers).then(function (response) {\n        resolve(response);\n      }).catch(err => {\n        reject(err);\n      });\n    });\n  });\n});","map":{"version":3,"names":["axios","store","inject","route","options","headers","Authorization","state","auth","token","Promise","resolve","reject","get","process","env","api_uri","then","response","catch","err","body","isUpload","post","patch","put","delete"],"sources":["C:/Test_Challenkers/app/src/services/api.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nexport default ({ store }, inject) => {\r\n  inject(\"get\", (route, options = {}) => {\r\n    let headers = { headers: { Authorization: store.state.auth ? store.state.auth.token : \"\" }, ...options };\r\n\r\n    return new Promise((resolve, reject) => {\r\n      axios\r\n        .get(process.env.api_uri + route, headers)\r\n        .then(function (response) {\r\n          resolve(response);\r\n        })\r\n        .catch((err) => {\r\n          reject(err);\r\n        });\r\n    });\r\n  });\r\n\r\n  inject(\"post\", (route, body = {}, isUpload = false) => {\r\n    let headers = !isUpload\r\n      ? {\r\n          headers: { Authorization: store.state.auth ? store.state.auth.token : \"\" },\r\n        }\r\n      : {\r\n          headers: {\r\n            Authorization: store.state.auth ? store.state.auth.token : \"\",\r\n            \"Content-Type\": \"multipart/form-data\",\r\n          },\r\n        };\r\n\r\n    return new Promise((resolve, reject) => {\r\n      axios\r\n        .post(process.env.api_uri + route, body, headers)\r\n        .then(function (response) {\r\n          resolve(response);\r\n        })\r\n        .catch((err) => {\r\n          reject(err);\r\n        });\r\n    });\r\n  });\r\n\r\n  inject(\"patch\", (route, body = {}) => {\r\n    let headers = { headers: { Authorization: store.state.auth ? store.state.auth.token : \"\" } };\r\n\r\n    return new Promise((resolve, reject) => {\r\n      axios\r\n        .patch(process.env.api_uri + route, body, headers)\r\n        .then(function (response) {\r\n          resolve(response);\r\n        })\r\n        .catch((err) => {\r\n          reject(err);\r\n        });\r\n    });\r\n  });\r\n\r\n  inject(\"put\", (route, body = {}) => {\r\n    let headers = { headers: { Authorization: store.state.auth ? store.state.auth.token : \"\" } };\r\n\r\n    return new Promise((resolve, reject) => {\r\n      axios\r\n        .put(process.env.api_uri + route, body, headers)\r\n        .then(function (response) {\r\n          resolve(response);\r\n        })\r\n        .catch((err) => {\r\n          reject(err);\r\n        });\r\n    });\r\n  });\r\n\r\n  inject(\"del\", (route) => {\r\n    let headers = { headers: { Authorization: store.state.auth ? store.state.auth.token : \"\" } };\r\n\r\n    return new Promise((resolve, reject) => {\r\n      axios\r\n        .delete(process.env.api_uri + route, headers)\r\n        .then(function (response) {\r\n          resolve(response);\r\n        })\r\n        .catch((err) => {\r\n          reject(err);\r\n        });\r\n    });\r\n  });\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}