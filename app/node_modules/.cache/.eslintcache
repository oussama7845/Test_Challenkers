[{"C:\\Test_Challenkers\\app\\src\\index.js":"1","C:\\Test_Challenkers\\app\\src\\app.js":"2","C:\\Test_Challenkers\\app\\src\\components\\citations\\displayCitations.tsx":"3","C:\\Test_Challenkers\\app\\src\\components\\citations\\createSearch.tsx":"4","C:\\Test_Challenkers\\app\\src\\components\\citations\\btnsCitations.tsx":"5","C:\\Test_Challenkers\\app\\src\\components\\citations\\mesCitations.tsx":"6","C:\\Test_Challenkers\\app\\src\\components\\popups\\edit.jsx":"7","C:\\Test_Challenkers\\app\\src\\components\\popups\\create.jsx":"8","C:\\Test_Challenkers\\app\\src\\components\\popups\\delete.jsx":"9"},{"size":207,"mtime":1689674087850,"results":"10","hashOfConfig":"11"},{"size":744,"mtime":1689757787335,"results":"12","hashOfConfig":"11"},{"size":2080,"mtime":1689760680117,"results":"13","hashOfConfig":"11"},{"size":1900,"mtime":1689723525097,"results":"14","hashOfConfig":"11"},{"size":2064,"mtime":1689684390128,"results":"15","hashOfConfig":"11"},{"size":2534,"mtime":1689762638167,"results":"16","hashOfConfig":"11"},{"size":3742,"mtime":1689714636782,"results":"17","hashOfConfig":"11"},{"size":4479,"mtime":1689758140315,"results":"18","hashOfConfig":"11"},{"size":802,"mtime":1689716033388,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"bbeo6d",{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"23"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"23"},"C:\\Test_Challenkers\\app\\src\\index.js",[],[],[],"C:\\Test_Challenkers\\app\\src\\app.js",["51"],[],"C:\\Test_Challenkers\\app\\src\\components\\citations\\displayCitations.tsx",["52"],[],"C:\\Test_Challenkers\\app\\src\\components\\citations\\createSearch.tsx",[],[],[],"C:\\Test_Challenkers\\app\\src\\components\\citations\\btnsCitations.tsx",[],[],"C:\\Test_Challenkers\\app\\src\\components\\citations\\mesCitations.tsx",[],[],"C:\\Test_Challenkers\\app\\src\\components\\popups\\edit.jsx",["53","54"],[],"import React, { useState } from \"react\";\r\nimport \"../css/edit.css\";\r\n\r\nfunction Edit({ showEditPopup, closeEditPopup }) {\r\n    const [citation, setcitation] = useState('');\r\n    const [auteur, setauteur] = useState('');\r\n    const [acteur, setacteur] = useState('');\r\n    const [personnage, setpersonnage] = useState('');\r\n    const [saison, setsaison] = useState('');\r\n    const [episode, setepisode] = useState('');\r\n  return showEditPopup ? (\r\n\r\n    \r\n<div id=\"app\">\r\n      <div className='popup'>\r\n        <div className=\"profile-popup-content\">\r\n          <div className=\"title-profile\">\r\n            <h2>Modifier votre Citation</h2>\r\n            <div className=\"line3\"></div>\r\n          </div>\r\n          <div className=\"colonne-step\">\r\n            <div className=\"colonnne-step1-grid1\">\r\n              <div className=\"input-field\">\r\n                <label >Citation</label>\r\n                <input\r\n                  id=\"citation\"\r\n                  value={citation}\r\n                  onChange={(e) => setcitation(e.target.value)}\r\n                  type=\"text\"\r\n                  placeholder=\"modifier votre citation\"\r\n                />\r\n              </div>\r\n              <div className=\"input-field\">\r\n                <label >auteur</label>\r\n                <input\r\n                  id=\"auteur\"\r\n                  value={auteur}\r\n                  onChange={(e) => setauteur(e.target.value)}\r\n                  type=\"text\"\r\n                  placeholder=\"modifier le nom de l'auteur\"\r\n                />\r\n              </div>\r\n\r\n              <div className=\"input-field\">\r\n                <label >episode</label>\r\n                <input\r\n                  id=\"episode\"\r\n                  value={episode}\r\n                  onChange={(e) => setepisode(e.target.value)}\r\n                  type=\"text\"\r\n                  placeholder=\"quelle épisode ?\"\r\n                />\r\n              </div>\r\n\r\n   \r\n            </div>\r\n            <div className=\"colonnne-step1-grid2\">\r\n              <div className=\"input-field\">\r\n                <label >acteur</label>\r\n                <input\r\n                  id=\"acteur\"\r\n                  value={acteur}\r\n                  onChange={(e) => setacteur(e.target.value)}\r\n                  type=\"text\"\r\n                  placeholder=\"modifier le nom de l'auteur\"\r\n                />\r\n              </div>\r\n              <div className=\"input-field\">\r\n                <label >\r\n                personnage\r\n                 \r\n                </label>\r\n                <input\r\n                  value={personnage}\r\n                  onChange={(e) => setpersonnage(e.target.value)}\r\n                  id=\"personnage\"\r\n                  type=\"text\"\r\n                  placeholder=\"modifier le nom de personnage\"\r\n                />\r\n              </div>\r\n\r\n              <div className=\"input-field\">\r\n                <label >saison</label>\r\n                <input\r\n                  id=\"saison\"\r\n                  value={saison}\r\n                  onChange={(e) => setsaison(e.target.value)}\r\n                  type=\"text\"\r\n                  placeholder=\"quelle saison ?\"\r\n                />\r\n              </div>\r\n\r\n     \r\n\r\n              \r\n\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"button-colonne margin\">\r\n            <div className=\"container_btn_invite\">\r\n              <a  href=\"#\" className=\"btn1\">\r\n                Confirmer\r\n              </a>\r\n            </div>\r\n            <div className=\"container_btn_invite\">\r\n              <a onClick={closeEditPopup} href=\"#\" className=\"btn1\">\r\n                Cancel\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  \r\n  ) : null;\r\n}\r\n\r\nexport default Edit;\r\n\r\n\r\n","C:\\Test_Challenkers\\app\\src\\components\\popups\\create.jsx",["55","56"],[],"C:\\Test_Challenkers\\app\\src\\components\\popups\\delete.jsx",["57"],[],"import React, { useState } from \"react\";\r\nimport \"../css/delete.css\";\r\n\r\nfunction Delete({ showDeletePopup, closeDeletePopup }) {\r\n    \r\n  return showDeletePopup ? (\r\n\r\n\r\n\r\n<div className=\"popup\">\r\n\r\n<div className=\"popup_container\">\r\n        <div className=\"title_confirm_delete\">\r\n          <h3>Vous êtes sûr ?</h3>\r\n        </div>\r\n        <br />\r\n        <div  className=\"btns-colonne\">\r\n          <button \r\n            className=\"container_btn_confirm\"\r\n            \r\n          >\r\n            Confirmer\r\n          </button>\r\n          <button\r\n            className=\"container_btn_close\"\r\n            onClick={closeDeletePopup}\r\n          >\r\n            Annuler\r\n          </button>\r\n        </div>\r\n \r\n\r\n</div>\r\n      \r\n\r\n</div>\r\n    \r\n      \r\n\r\n  \r\n  ) : null;\r\n}\r\n\r\nexport default Delete;\r\n\r\n",{"ruleId":"58","severity":1,"message":"59","line":7,"column":26,"nodeType":"60","messageId":"61","endLine":7,"endColumn":31},{"ruleId":"62","severity":1,"message":"63","line":48,"column":9,"nodeType":"64","endLine":48,"endColumn":42},{"ruleId":"62","severity":1,"message":"63","line":102,"column":15,"nodeType":"64","endLine":102,"endColumn":45},{"ruleId":"62","severity":1,"message":"63","line":107,"column":15,"nodeType":"64","endLine":107,"endColumn":69},{"ruleId":"62","severity":1,"message":"63","line":133,"column":15,"nodeType":"64","endLine":133,"endColumn":77},{"ruleId":"62","severity":1,"message":"63","line":138,"column":15,"nodeType":"64","endLine":138,"endColumn":71},{"ruleId":"58","severity":1,"message":"65","line":1,"column":17,"nodeType":"60","messageId":"61","endLine":1,"endColumn":25},"no-unused-vars","'toast' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useState' is defined but never used."]