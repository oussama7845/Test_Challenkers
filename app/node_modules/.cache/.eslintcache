[{"C:\\Test_Challenkers\\app\\src\\index.js":"1","C:\\Test_Challenkers\\app\\src\\app.js":"2","C:\\Test_Challenkers\\app\\src\\components\\citations\\displayCitations.tsx":"3","C:\\Test_Challenkers\\app\\src\\components\\citations\\createSearch.tsx":"4","C:\\Test_Challenkers\\app\\src\\components\\citations\\btnsCitations.tsx":"5","C:\\Test_Challenkers\\app\\src\\components\\citations\\mesCitations.tsx":"6","C:\\Test_Challenkers\\app\\src\\components\\popups\\edit.jsx":"7","C:\\Test_Challenkers\\app\\src\\components\\popups\\create.jsx":"8","C:\\Test_Challenkers\\app\\src\\components\\popups\\delete.jsx":"9"},{"size":207,"mtime":1689674087850,"results":"10","hashOfConfig":"11"},{"size":642,"mtime":1689796216419,"results":"12","hashOfConfig":"11"},{"size":6384,"mtime":1689808865069,"results":"13","hashOfConfig":"11"},{"size":1896,"mtime":1689781623468,"results":"14","hashOfConfig":"11"},{"size":2491,"mtime":1689807960382,"results":"15","hashOfConfig":"11"},{"size":3316,"mtime":1689808433153,"results":"16","hashOfConfig":"11"},{"size":5394,"mtime":1689810694322,"results":"17","hashOfConfig":"11"},{"size":4519,"mtime":1689776172171,"results":"18","hashOfConfig":"11"},{"size":1413,"mtime":1689774219116,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"bbeo6d",{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"23"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"23"},"C:\\Test_Challenkers\\app\\src\\index.js",[],[],[],"C:\\Test_Challenkers\\app\\src\\app.js",["51"],[],"C:\\Test_Challenkers\\app\\src\\components\\citations\\displayCitations.tsx",["52","53"],[],"C:\\Test_Challenkers\\app\\src\\components\\citations\\createSearch.tsx",[],[],[],"C:\\Test_Challenkers\\app\\src\\components\\citations\\btnsCitations.tsx",[],[],"C:\\Test_Challenkers\\app\\src\\components\\citations\\mesCitations.tsx",[],[],"C:\\Test_Challenkers\\app\\src\\components\\popups\\edit.jsx",["54","55","56"],[],"C:\\Test_Challenkers\\app\\src\\components\\popups\\create.jsx",["57","58"],[],"import React, { useState } from \"react\";\r\nimport \"../css/edit.css\";\r\nimport axios from \"axios\";\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction Create({ showCreatePopup, closeCreatePopup }) {\r\n  const [citation, setcitation] = useState(\"\");\r\n  const [auteur, setauteur] = useState(\"\");\r\n  const [acteur, setacteur] = useState(\"\");\r\n  const [personnage, setpersonnage] = useState(\"\");\r\n  const [saison, setsaison] = useState(\"\");\r\n  const [episode, setepisode] = useState(\"\");\r\n\r\n  const confirmCreateCitation = async () => {\r\n    try {\r\n      let body = {\r\n        citation: citation,\r\n        auteur: auteur,\r\n        acteur: acteur,\r\n        personnage: personnage,\r\n        saison: saison,\r\n        episode: episode,\r\n      };\r\n\r\n      const response = await axios.post(\"http://localhost:3000/create_Citation\",body);\r\n\r\n      if (response.status === 201) {\r\n         closeCreatePopup(); // appeler la function qui close le pop up\r\n         window.location.reload();\r\n        toast.success(\"Citation enregistré avec succès\");\r\n\r\n        \r\n      } else {\r\n        toast.error(\"error\");\r\n\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n      toast.error(\"error\");\r\n    }\r\n  };\r\n\r\n\r\n  return showCreatePopup ? (\r\n\r\n    \r\n<div id=\"app\">\r\n      <div className='popup'>\r\n        <div className=\"profile-popup-content\">\r\n          <div className=\"title-profile\">\r\n            <h2>Créer votre Citation</h2>\r\n            <div className=\"line3\"></div>\r\n          </div>\r\n          <div className=\"colonne-step\">\r\n            <div className=\"colonnne-step1-grid1\">\r\n              <div className=\"input-field\">\r\n                <label >Citation</label>\r\n                <input\r\n                  id=\"citation\"\r\n                  value={citation}\r\n                  onChange={(e) => setcitation(e.target.value)}\r\n                  type=\"text\"\r\n                  placeholder=\"Créer votre citation\"\r\n                />\r\n              </div>\r\n              <div className=\"input-field\">\r\n                <label >auteur</label>\r\n                <input\r\n                  id=\"auteur\"\r\n                  value={auteur}\r\n                  onChange={(e) => setauteur(e.target.value)}\r\n                  type=\"text\"\r\n                  placeholder=\"Nom de l'auteur\"\r\n                />\r\n              </div>\r\n\r\n              <div className=\"input-field\">\r\n                <label >episode</label>\r\n                <input\r\n                  id=\"episode\"\r\n                  value={episode}\r\n                  onChange={(e) => setepisode(e.target.value)}\r\n                  type=\"text\"\r\n                  placeholder=\"quelle épisode ?\"\r\n                />\r\n              </div>\r\n\r\n   \r\n            </div>\r\n            <div className=\"colonnne-step1-grid2\">\r\n              <div className=\"input-field\">\r\n                <label >acteur</label>\r\n                <input\r\n                  id=\"acteur\"\r\n                  value={acteur}\r\n                  onChange={(e) => setacteur(e.target.value)}\r\n                  type=\"text\"\r\n                  placeholder=\"Nom de l'acteur\"\r\n                />\r\n              </div>\r\n              <div className=\"input-field\">\r\n                <label >\r\n                personnage\r\n                 \r\n                </label>\r\n                <input\r\n                  value={personnage}\r\n                  onChange={(e) => setpersonnage(e.target.value)}\r\n                  id=\"personnage\"\r\n                  type=\"text\"\r\n                  placeholder=\"Nom de personnage\"\r\n                />\r\n              </div>\r\n\r\n              <div className=\"input-field\">\r\n                <label >saison</label>\r\n                <input\r\n                  id=\"saison\"\r\n                  value={saison}\r\n                  onChange={(e) => setsaison(e.target.value)}\r\n                  type=\"text\"\r\n                  placeholder=\"quelle saison ?\"\r\n                />\r\n              </div>\r\n\r\n     \r\n\r\n              \r\n\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"button-colonne margin\">\r\n            <div className=\"container_btn_invite\">\r\n              <a onClick={confirmCreateCitation}  href=\"#\" className=\"btn1\">\r\n                Confirmer\r\n              </a>\r\n            </div>\r\n            <div className=\"container_btn_invite\">\r\n              <a onClick={closeCreatePopup} href=\"#\" className=\"btn1\">\r\n                Cancel\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  \r\n  ) : null;\r\n}\r\n\r\nexport default Create;\r\n\r\n\r\n","C:\\Test_Challenkers\\app\\src\\components\\popups\\delete.jsx",["59"],[],"import React, { useState } from \"react\";\r\nimport \"../css/delete.css\";\r\nimport axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\n\r\n\r\n\r\nfunction Delete({ showDeletePopup, idCitation , closeDeletePopup }) {\r\n\r\n\r\n  const confirm = async () => {\r\n    try {\r\n      const response = await axios.delete(`http://localhost:3000/citation/${idCitation}`);\r\n      \r\n      if (response.status === 200) {\r\n        closeDeletePopup();\r\n        window.location.reload();\r\n        toast.success('Citations supprimer avec succès');\r\n\r\n        \r\n     \r\n      } else {\r\n        throw new Error('Erreur lors de la récupération des citations.');\r\n      }\r\n    }\r\n      \r\n     catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n  \r\n    \r\n  return showDeletePopup ? (\r\n\r\n\r\n<div className=\"popup\">\r\n\r\n<div className=\"popup_container\">\r\n        <div className=\"title_confirm_delete\">\r\n          <h3>Vous êtes sûr ?</h3>\r\n        </div>\r\n        <br />\r\n        <div  className=\"btns-colonne\">\r\n          <button onClick={confirm}\r\n            className=\"container_btn_confirm\"\r\n            \r\n          >\r\n            Confirmer\r\n          </button>\r\n          <button\r\n            className=\"container_btn_close\"\r\n            onClick={closeDeletePopup}\r\n          >\r\n            Annuler\r\n          </button>\r\n        </div>\r\n \r\n\r\n</div>\r\n      \r\n\r\n</div>\r\n    \r\n      \r\n\r\n  \r\n  ) : null;\r\n}\r\n\r\nexport default Delete;\r\n\r\n",{"ruleId":"60","severity":1,"message":"61","line":6,"column":26,"nodeType":"62","messageId":"63","endLine":6,"endColumn":31},{"ruleId":"64","severity":1,"message":"65","line":16,"column":6,"nodeType":"66","endLine":16,"endColumn":30,"suggestions":"67"},{"ruleId":"68","severity":1,"message":"69","line":75,"column":13,"nodeType":"70","endLine":75,"endColumn":46},{"ruleId":"64","severity":1,"message":"71","line":23,"column":6,"nodeType":"66","endLine":23,"endColumn":24,"suggestions":"72"},{"ruleId":"68","severity":1,"message":"69","line":171,"column":15,"nodeType":"70","endLine":171,"endColumn":63},{"ruleId":"68","severity":1,"message":"69","line":176,"column":15,"nodeType":"70","endLine":176,"endColumn":69},{"ruleId":"68","severity":1,"message":"69","line":135,"column":15,"nodeType":"70","endLine":135,"endColumn":77},{"ruleId":"68","severity":1,"message":"69","line":140,"column":15,"nodeType":"70","endLine":140,"endColumn":71},{"ruleId":"60","severity":1,"message":"73","line":1,"column":17,"nodeType":"62","messageId":"63","endLine":1,"endColumn":25},"no-unused-vars","'toast' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getRandomCitation' and 'resetSignal'. Either include them or remove the dependency array. If 'resetSignal' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["74"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has missing dependencies: 'getCitationDetails' and 'resetSignal'. Either include them or remove the dependency array. If 'resetSignal' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["75"],"'useState' is defined but never used.",{"desc":"76","fix":"77"},{"desc":"78","fix":"79"},"Update the dependencies array to be: [detectSignalMyCitation, getRandomCitation, resetSignal]",{"range":"80","text":"81"},"Update the dependencies array to be: [detectSignalEdit, getCitationDetails, resetSignal]",{"range":"82","text":"83"},[526,550],"[detectSignalMyCitation, getRandomCitation, resetSignal]",[711,729],"[detectSignalEdit, getCitationDetails, resetSignal]"]